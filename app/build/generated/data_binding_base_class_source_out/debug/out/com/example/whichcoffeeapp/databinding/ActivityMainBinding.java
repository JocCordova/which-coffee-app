// Generated by view binder compiler. Do not edit!
package com.example.whichcoffeeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Barrier;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import com.example.whichcoffeeapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Barrier barrier;

  @NonNull
  public final Barrier barrier2;

  @NonNull
  public final FragmentContainerView fragmentContainerViewCoffee;

  @NonNull
  public final TextView noCoffee;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Barrier barrier,
      @NonNull Barrier barrier2, @NonNull FragmentContainerView fragmentContainerViewCoffee,
      @NonNull TextView noCoffee) {
    this.rootView = rootView;
    this.barrier = barrier;
    this.barrier2 = barrier2;
    this.fragmentContainerViewCoffee = fragmentContainerViewCoffee;
    this.noCoffee = noCoffee;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      Barrier barrier = rootView.findViewById(R.id.barrier);
      if (barrier == null) {
        missingId = "barrier";
        break missingId;
      }
      Barrier barrier2 = rootView.findViewById(R.id.barrier2);
      if (barrier2 == null) {
        missingId = "barrier2";
        break missingId;
      }
      FragmentContainerView fragmentContainerViewCoffee = rootView.findViewById(R.id.fragment_container_view_coffee);
      if (fragmentContainerViewCoffee == null) {
        missingId = "fragmentContainerViewCoffee";
        break missingId;
      }
      TextView noCoffee = rootView.findViewById(R.id.noCoffee);
      if (noCoffee == null) {
        missingId = "noCoffee";
        break missingId;
      }
      return new ActivityMainBinding((ConstraintLayout) rootView, barrier, barrier2,
          fragmentContainerViewCoffee, noCoffee);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
